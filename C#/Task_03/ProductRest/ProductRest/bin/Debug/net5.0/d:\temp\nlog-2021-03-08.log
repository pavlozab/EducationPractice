2021-03-08 12:08:29.6317 | ERROR | Health check mongodb completed after 3014.7746ms with status Unhealthy and description '(null)' | System.OperationCanceledException: The operation was canceled.
   at System.Threading.CancellationToken.ThrowOperationCanceledException()
   at System.Threading.CancellationToken.ThrowIfCancellationRequested()
   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedHelper.HandleCompletedTask(Task completedTask)
   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoClient.AreSessionsSupportedAfterSeverSelctionAsync(CancellationToken cancellationToken)
   at MongoDB.Driver.MongoClient.AreSessionsSupportedAsync(CancellationToken cancellationToken)
   at MongoDB.Driver.MongoClient.StartImplicitSessionAsync(CancellationToken cancellationToken)
   at MongoDB.Driver.MongoClient.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   at HealthChecks.MongoDb.MongoDbHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) | Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService | url: https://localhost/health/ready | action: 
2021-03-08 12:09:16.2332 | ERROR | Health check mongodb completed after 3013.3701ms with status Unhealthy and description '(null)' | System.OperationCanceledException: The operation was canceled.
   at System.Threading.CancellationToken.ThrowOperationCanceledException()
   at System.Threading.CancellationToken.ThrowIfCancellationRequested()
   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedHelper.HandleCompletedTask(Task completedTask)
   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoClient.AreSessionsSupportedAfterSeverSelctionAsync(CancellationToken cancellationToken)
   at MongoDB.Driver.MongoClient.AreSessionsSupportedAsync(CancellationToken cancellationToken)
   at MongoDB.Driver.MongoClient.StartImplicitSessionAsync(CancellationToken cancellationToken)
   at MongoDB.Driver.MongoClient.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   at HealthChecks.MongoDb.MongoDbHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) | Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService | url: https://localhost/health/ready | action: 
2021-03-08 12:15:58.8362 | ERROR | Something went wrong inside GetProducts action: JSON reader was expecting a value but found 'a'. |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 12:51:36.6708 | ERROR | Something went wrong inside GetProducts action: JSON reader was expecting ':' but found '}'. |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 13:01:37.6034 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: {document}.ToString().Contains("a"). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 13:08:35.2031 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: Any(value(System.Reflection.PropertyInfo[]).Select(ProductRest.Dtos.ProductDto.GetProperty({document}.Name).GetValue({document}, null)).Where({document}.ToString().ToLower().Contains("a"))). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 13:20:20.8625 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: {document}.ToString().Contains("a"). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 13:21:10.6742 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: {document}.ToString().Contains("a"). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 13:21:11.7427 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: {document}.ToString().Contains("a"). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 13:30:00.2312 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: Any(value(System.Reflection.PropertyInfo[]).Select(ProductRest.Dtos.ProductDto.GetProperty({document}.Name).GetValue({document}, null)).Where({document}.ToString().ToLower().Contains("a"))). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 13:35:45.6680 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: value(ProductRest.Repositories.MongoDbProductsRepository)._toString({document}).Contains("a"). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 13:36:10.9347 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: value(ProductRest.Repositories.MongoDbProductsRepository)._toString({document}).Contains("a"). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 13:49:15.9071 | ERROR | Something went wrong inside GetProducts action: JSON reader was expecting a value but found 'AddressLine'. |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 13:54:30.9320 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: Join(" ", value(System.Reflection.PropertyInfo[]).Select(ProductRest.Dtos.ProductDto.GetProperty({document}.Name).GetValue({document}, null).ToString())).Contains("a"). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 17:15:31.4680 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: Any(value(System.Reflection.PropertyInfo[]).Select(ProductRest.Dtos.ProductDto.GetProperty({document}.Name).GetValue({document}, null)).Where({document}.ToString().ToLower().Contains("a"))). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 17:15:35.1607 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: Any(value(System.Reflection.PropertyInfo[]).Select(ProductRest.Dtos.ProductDto.GetProperty({document}.Name).GetValue({document}, null)).Where({document}.ToString().ToLower().Contains("a"))). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 17:15:43.6067 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: Any(value(System.Reflection.PropertyInfo[]).Select(ProductRest.Dtos.ProductDto.GetProperty({document}.Name).GetValue({document}, null)).Where({document}.ToString().ToLower().Contains("aa"))). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 17:18:15.5830 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: Join(" ", Array(value(System.Reflection.PropertyInfo[]).Select(ProductRest.Dtos.ProductDto.GetProperty({document}.Name).GetValue({document}, null)))).Contains("aa"). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
2021-03-08 17:18:21.3655 | ERROR | Something went wrong inside GetProducts action: Unsupported filter: Join(" ", Array(value(System.Reflection.PropertyInfo[]).Select(ProductRest.Dtos.ProductDto.GetProperty({document}.Name).GetValue({document}, null)))).Contains("a"). |  | ProductRest.Controllers.ProductController | url: https://localhost/api/v1/products | action: GetProducts
